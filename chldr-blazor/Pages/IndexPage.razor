@page "/"
@inject IndexViewModel ViewModel;
@inject IStringLocalizer<AppLocalizations> Localizer;

<div class="input-group mb-3 mt-3">

    <div class="input-group-prepend">
        <span class="input-group-text">
            <span class="bi bi-search"></span>
        </span>
    </div>

    <InputText class="form-control shadow-none" placeholder="@Localizer["StartTyping"]" @bind-Value="@ViewModel.InputText" @oninput="(e)=> ViewModel.Search(e)" />

    <div class="ms-2">
        <button type="button" class="btn btn-secondary" @onclick="ViewModel.ShowRandomEntries">
            <span class="bi-arrow-repeat"></span>
        </button>
    </div>

</div>


@if (ViewModel.Entries.Count != 0)
{
    <div class="chldr_entries">

        @foreach (var entry in ViewModel.Entries)
        {
            <EntryView ViewModel="@entry"></EntryView>
        }

    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        ViewModel.PropertyChanged += async (sender, e) =>
        {
            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        };
        await base.OnInitializedAsync();
    }
}