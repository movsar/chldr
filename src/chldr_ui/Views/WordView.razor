@using chldr_data.Helpers;
@inherits EntryViewModel;

@if (Entry != null)
{
    <div class="chldr_entry">
        <div class="card card-body">

            <div class="chldr_entry_header card-title">
                @Header
                @if (Entry?.Sounds.Count() > 0)
                {
                    <span class="oi oi-volume-high" @onclick="ListenToPronunciation"></span>
                }
                @if (CanEdit())
                {
                    <a href="/entry/edit/@Entry!.EntryId"><i class="bi bi-pencil ms-2"></i></a>
                }
            </div>

            @if (!String.IsNullOrWhiteSpace(Subheader))
            {
                <div class="chldr_entry_sub-header">
                    @Subheader
                </div>
            }

            @if (Entry?.Subtype > 0)
            {
               @* var partOfSpeech = (WordType)Entry.Subtype;
                var partOfSpeechLocalizedTitle = Localizer[$"Word:{partOfSpeech}"].ToString();

                <p class="small"><i>@partOfSpeechLocalizedTitle</i></p>

                @if (Entry.Details != null)
                {
                    switch ((WordType)Entry.Subtype)
                    {
                        case WordType.Noun:                         
                            break;

                        case WordType.Verb:
                            break;

                        default:
                            Console.WriteLine("no handler for the details of this type");
                            break;
                    }
                }*@
            }

            @if (Entry.SubEntries?.Count() > 0)
            {
                <div class="flex-column">
                    [
                    @foreach (var subEntry in Entry.SubEntries)
                    {
                        <span>
                            @subEntry.Content;
                            @if (CanEdit())
                            {
                                <a href="/entry/edit/@subEntry!.EntryId"><i class="bi bi-pencil me-2"></i></a>
                            }
                        </span>
                    }
                    ]
                </div>
            }

            <div class="chldr_entry_translations mt-2">
                @foreach (var translation in @Entry.Translations)
                {
                    <TranslationView Translation="@translation"
                                     Promote="@(async () => await PromoteTranslationAsync(translation))">
                    </TranslationView>
                }
            </div>

            <EntryActionButtonsView Entry="Entry"
                                    PromoteHandler="async () => await PromoteEntryAsync()"
                                    ShareHandler="() => Share()"
                                    RemoveHandler="async() => await Remove()">
            </EntryActionButtonsView>
        </div>
    </div>
}